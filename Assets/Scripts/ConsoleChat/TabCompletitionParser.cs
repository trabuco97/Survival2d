using UnityEngine;
using System.Collections;

namespace ConsoleChat
{

    /// <summary>
    /// This class is generated by every command
    /// The command must supply the args it has and, the tabgenerator aligned with 
    /// the #arg 
    /// 
    /// 
    /// </summary>
    public class TabCompletitionParser
    {
        private string command_name;

        private uint args_number;
        private ITabNamesGenerator[] args_tabs_generator_holder = null;

        // Always check when using this class
        // Must be true
        public bool IsValid { get; private set; } = false;

        public TabCompletitionParser(string command_name, uint args_number)
        {
            if (args_number > 0)
            {
                this.command_name = command_name;
                this.args_number = args_number;
                args_tabs_generator_holder = new ITabNamesGenerator[args_number];

                IsValid = true;
            }
        }

        // Pre: args_position must be range [0, args_number)
        public bool TryAddTabGenerator(ITabNamesGenerator name_generator, uint args_position)
        {
            if (IsValid && args_position >= 0 && args_position < args_number)
            {
                args_tabs_generator_holder[args_position] = name_generator;
                return true;
            }

            return false;
        }

        public bool TryGetTabCompletitionNames(string command_name, string[] command_args, out string[] completition_names, out string name_to_replace)
        {
            completition_names = null;
            name_to_replace = string.Empty;

            if (!IsValid) return false;
            if (command_name != this.command_name || command_args.Length > args_number || command_args.Length == 0) return false;

            var args_to_complete = command_args.Length - 1;
            var name_generator = args_tabs_generator_holder[args_to_complete];

            if (name_generator == null) return false;

            name_to_replace = command_args[args_to_complete];

            bool output = name_generator.GetTabNames(name_to_replace, out var tab_names);
            completition_names = tab_names;

            return output;
        }
    }
}